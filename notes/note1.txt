----------------------------------------------------------------------
It is good to create a virutal env in each project to bring more focus to packages installed speceficly for
a specefic project you are working on
To create a virtual enviroment, go to the folder of the project
then open it in git bash and type
    python -m venv env <-this is the name you chose for virtual enviroment
to activate the virtual enviroment
source env/Scripts/activate

to leave the virtual enviroment you simply write
    deactivate

and the cool thing is that when you write pip freeze to check the packages installed
after you activate ve
    you will see no packages
----------------------------------------------------------------------
 django-admin startproject TeddyTrader .
    the . will not allow django to create multiple folders like TeddyTrader then TeddyTrader
    - a bit more professioanl
now you run py manage.py runserver
----------------------------------------------------------------------
python manage.py startapp pages <--- to build an app
----------------------------------------------------------------------
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
did this in my settings.py, the course lessons were a bit different than this
but this solution works too
----------------------------------------------------------------------
Now we should setup a git for our project
just use git stpes after you create repo

everytime you want to add what you made here to your git
git add -A
git commit -m "message"
git push origin master

so also create a .gitignore so you dont push videos images because they take too much storage
and go to gitignore.io and type Django, you know the rest
----------------------------------------------------------------------
{% comment %} We did our entire html in splits for cleaner code {% endcomment %}
    {% include 'shared/header.html'%} 
    {% include 'shared/navbar.html'%} 
    {% block content %} {% endblock %} 
    {% include 'shared/footer.html' %}
----------------------------------------------------------------------
when you want to create a super user in git bash
first migration and migreate

but since it is gitbash your command should ber
winpty python manage.py createsuperuser
teddytrader_faraz_is_super__user
TeddysAreDopeAndFun@19991234
----------------------------------------------------------------------
in our models whenever we work with img fields, we must use package pillow
so install pip install pillow
----------------------------------------------------------------------
One thing we'll learn here is that we will be customizing our django admin
for our team so they would have an amazing user experience as well

ALL THE NOTES WILL GO HERE

from django.contrib import admin
from .models import Team
from django.utils.html import format_html

# CUSTOMIZE ADMIN PAGE FOR TEAM CLASS


class TeamAdmin(admin.ModelAdmin):

    list_display = ('id', 'thumbnail', 'first_name', 'last_name',
                    'designation', 'created_date')
    # this tuple's job is to ask us what fields we want to display in Django Admin for Team

    # only the id is clickable so we want also first-name to be clickable as well
    list_display_links = ('id', 'thumbnail', 'first_name',)  # , is required

    search_fields = ('first_name', 'last_name', 'id', 'designation',)
    # brings a search field for your django and those values in tuple are about
    # by what fields you want to search for the users

    list_filter = ('designation',) #Get data by designations. Filter box

    # to be able to also bring photos in display to admin, we have to use html tags as well
    # from django.utils.html import format_html

    def thumbnail(self, object):
        return format_html(f'<img src="{object.profile_picture.url}" width="40" style="border-radius: 50%"/>')

    thumbnail.short_description = 'Profile Picture'


admin.site.register(Team, TeamAdmin)